/*лайк по сути это атрибут объекта медиа, 
другими словами это флаг - переменная (поле) типа BOOLEAN 
(0 - отсутствие лайка, 1 пользователь поставил Like);

Можно условиться что будет еще один похожий атрибут - 
DisLike (с такой же областью значений - 1 /дизлайк поставлен/, 0 /дизлайк непоставлен/)

Создавать таблицу-справочник этих атрибутов (Like, Dislike) считаю ненужным и избыточным.

Не обойтись без новый таблицы, где будут содержаться сведения о поставленных лайках/дизлайках. Предлагаю такую структуру:
*/

CREATE TABLE vk.like-dis_tbl (
	id INT UNSIGNED NOT NULL AUTO_INCREAMENT PRIMARY KEY comment 'Первичный ключ записей в таблице лайков-дизлайков',
	media_id INT UNSIGNED NOT NULL comment 'Внешний ключ для ссылки на объект медиа к таблице media',
	user_id INT UNSIGNED NOT NULL comment 'Внешний ключ - ссылка на пользователя в таблице users (profiles), который поставил Like/Dis',
	flg_like BOOLEAN comment '1 - поставлен like, 0 - не поставлен',
	flg_dislike BOOLEAN comment '1- поставлен dislike, 0 не поставлен',
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP comment 'Время создания записи Like/Dislike'
) COMMENT 'Таблица Like, Dislike';

/* по смыслу один объект медиа в таблице media может иметь неограниченное количество связанных записей в таблице like-dis_tbl, 
которые несут информацию о том кто поставил флаг, когда и на какой объект. */

-- нужно как-то предусмотреть ограничение, что поля flg_like, flg_dislike не могут одновременно иметь значение TRUE (1)
-- Вопрос нужно ли делать для полей (внешних ключей для связи с таблицами media, users) - media_id, user_id таблицы like-dis_tbl свойства PRIMARY KEY?
 
/* Можно реализовать дополнительный функционал связанный со статусом публичности медиа-контента на странице пользователя - 
поле publicity_status INT UNSIGNED NOT NULL comment 'Кто видит объект медиа - /0 - никто, 1 только друзья, 2 все остальные пользователи сети'
это поле предлагаю добавить в таблицу media */

-- Что касается постов - предлагаю добавить дополнительное поле в таблицу media_types - 
INSERT INTO media_types (name) VALUES ('Post');

/* есть вопрос по поводу хранения в базе медиаконтента - фотографий, текстовых постов, видео, аудиотреков 
- я не нашел в нашей базе поля для хранения объектов этих типов, а также поля для хранения, допустим, ссылок на эти объекты 
Как будет организовано хранение или ссылание на медиа-объекты? */